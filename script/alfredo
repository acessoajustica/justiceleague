#! /bin/bash
#
# Builds the Docker image using Docker-Compose,
# Wraps running bundler and rspec tests,
# Starts and Restarts the app;
# (requires docker, docker-compose and sudo privileges)
#

GEMS='Gemfile'

function usage {
    echo "usage: ./scripts/init.sh [OPTIONS]:"
    echo " "
    echo " build:      Builds everything, images and containers."
    echo " run:        Runs the app on the latest container."
    echo " db:         Enters the database Container."
    echo " db:reset:   Resets the database."
    echo " rspec:      Runs unit tests."
    echo " cucumber:   Runs acceptance tests."
    echo " test:       Runs all tests."
    echo " clean:      Stops and Removes all containers."
    echo " purge:      Stops and Removes all containers and images."
    echo " update:     Runs bundle update."
    echo " migrate:    Runs all migrations. (also done by 'run' and 'all')"
    echo " restart:    Stops all containers and then 'run'."
    echo " seed:       Puts initial values on the database."
    echo " help:       Prints this message."
    echo " "
}
function check_deps {
    # Check dependencies.
    command -v docker > /dev/null 2>&1 || { echo >&2 "I require '${DOCKER}', but it's not installed.  Aborting."; exit 1; }
    command -v docker-compose > /dev/null 2>&1 || { echo >&2 "I require '${DOCKER_COMPOSE}', but it's not installed.  Aborting."; exit 1; }
    return 0
}

function build
{
    docker-compose build
}

function migrate
{
    docker-compose run web rake db:migrate
}

function seed
{
    docker-compose run web rake db:seed
}

function run
{
    docker-compose up
}


if check_deps; then
    if [[ $1 == build ]]; then build;
    elif [[ $1 == purge ]]; then build_purge;
    elif [[ $1 == update ]]; then build_update;
    elif [[ $1 == clean ]]; then build_clean;
    elif [[ $1 == restart ]]; then app_restart;
    elif [[ $1 == run ]]; then run;
    elif [[ $1 == db ]]; then app_db;
    elif [[ $1 == db:reset ]]; then app_db_reset;
    elif [[ $1 == migrate ]]; then migrate;
    elif [[ $1 == cucumber ]]; then app_cucumber;
    elif [[ $1 == rspec ]]; then app_rspec;
    elif [[ $1 == test ]]; then app_test;
    elif [[ $1 == seed ]]; then seed;
    elif [[ $1 == help ]]; then usage;
    else { echo ""; echo "Error: no valid argument."; echo ""; usage; echo "Exiting..."; exit 0; }
    fi
fi
